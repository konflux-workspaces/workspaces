// Code generated by MockGen. DO NOT EDIT.
// Source: interface_test.go
//
// Generated by this command:
//
//	mockgen -source=interface_test.go -destination=mocks/mapper.go -package=mocks -exclude_interfaces=FakeIWReadClient
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	v1alpha1 "github.com/konflux-workspaces/workspaces/operator/api/v1alpha1"
	v1alpha10 "github.com/konflux-workspaces/workspaces/server/api/v1alpha1"
	gomock "go.uber.org/mock/gomock"
)

// MockFakeIWMapper is a mock of FakeIWMapper interface.
type MockFakeIWMapper struct {
	ctrl     *gomock.Controller
	recorder *MockFakeIWMapperMockRecorder
}

// MockFakeIWMapperMockRecorder is the mock recorder for MockFakeIWMapper.
type MockFakeIWMapperMockRecorder struct {
	mock *MockFakeIWMapper
}

// NewMockFakeIWMapper creates a new mock instance.
func NewMockFakeIWMapper(ctrl *gomock.Controller) *MockFakeIWMapper {
	mock := &MockFakeIWMapper{ctrl: ctrl}
	mock.recorder = &MockFakeIWMapperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFakeIWMapper) EXPECT() *MockFakeIWMapperMockRecorder {
	return m.recorder
}

// InternalWorkspaceListToWorkspaceList mocks base method.
func (m *MockFakeIWMapper) InternalWorkspaceListToWorkspaceList(arg0 *v1alpha1.InternalWorkspaceList) (*v1alpha10.WorkspaceList, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InternalWorkspaceListToWorkspaceList", arg0)
	ret0, _ := ret[0].(*v1alpha10.WorkspaceList)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// InternalWorkspaceListToWorkspaceList indicates an expected call of InternalWorkspaceListToWorkspaceList.
func (mr *MockFakeIWMapperMockRecorder) InternalWorkspaceListToWorkspaceList(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InternalWorkspaceListToWorkspaceList", reflect.TypeOf((*MockFakeIWMapper)(nil).InternalWorkspaceListToWorkspaceList), arg0)
}

// InternalWorkspaceToWorkspace mocks base method.
func (m *MockFakeIWMapper) InternalWorkspaceToWorkspace(arg0 *v1alpha1.InternalWorkspace) (*v1alpha10.Workspace, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InternalWorkspaceToWorkspace", arg0)
	ret0, _ := ret[0].(*v1alpha10.Workspace)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// InternalWorkspaceToWorkspace indicates an expected call of InternalWorkspaceToWorkspace.
func (mr *MockFakeIWMapperMockRecorder) InternalWorkspaceToWorkspace(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InternalWorkspaceToWorkspace", reflect.TypeOf((*MockFakeIWMapper)(nil).InternalWorkspaceToWorkspace), arg0)
}

// WorkspaceToInternalWorkspace mocks base method.
func (m *MockFakeIWMapper) WorkspaceToInternalWorkspace(arg0 *v1alpha10.Workspace) (*v1alpha1.InternalWorkspace, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WorkspaceToInternalWorkspace", arg0)
	ret0, _ := ret[0].(*v1alpha1.InternalWorkspace)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// WorkspaceToInternalWorkspace indicates an expected call of WorkspaceToInternalWorkspace.
func (mr *MockFakeIWMapperMockRecorder) WorkspaceToInternalWorkspace(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WorkspaceToInternalWorkspace", reflect.TypeOf((*MockFakeIWMapper)(nil).WorkspaceToInternalWorkspace), arg0)
}
